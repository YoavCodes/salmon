{
  "name": "grunt-contrib-jasmine",
  "description": "Run jasmine specs headlessly through PhantomJS.",
  "version": "0.8.1",
  "homepage": "https://github.com/gruntjs/grunt-contrib-jasmine",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gruntjs/grunt-contrib-jasmine.git"
  },
  "bugs": {
    "url": "https://github.com/gruntjs/grunt-contrib-jasmine/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gruntjs/grunt-contrib-jasmine/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt-lib-phantomjs": "^0.6.0",
    "rimraf": "~2.1.4",
    "chalk": "~0.4.0",
    "lodash": "~2.4.1",
    "es5-shim": "~4.0.1",
    "jasmine-core": ">=2.0.4"
  },
  "devDependencies": {
    "grunt-contrib-internal": "~0.4.5",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt": "~0.4.5",
    "grunt-contrib-connect": "~0.4.0",
    "grunt-contrib-watch": "~0.5.3"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "jasmine",
    "unit",
    "phantomjs",
    "headless",
    "tests"
  ],
  "contributors": [
    {
      "name": "Jarrod Overson",
      "url": "http://jarrodoverson.com"
    },
    {
      "name": "\"Cowboy\" Ben Alman",
      "url": "http://benalman.com"
    }
  ],
  "readme": "# grunt-contrib-jasmine v0.8.1 [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-contrib-jasmine.png?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-jasmine) <a href=\"https://ci.appveyor.com/project/gruntjs/grunt-contrib-jasmine\"><img src=\"https://ci.appveyor.com/api/projects/status/5985958by5rhnh31/branch/master\" alt=\"Build Status: Windows\" height=\"18\" /></a>\n\n> Run jasmine specs headlessly through PhantomJS.\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-jasmine --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-jasmine');\n```\n\n\n\n\n## Jasmine task\n_Run this task with the `grunt jasmine` command._\n\nAutomatically builds and maintains your spec runner and runs your tests headlessly through PhantomJS.\n\n#### Run specs locally or on a remote server\n\nRun your tests on your local filesystem or via a server task like [grunt-contrib-connect][].\n\n#### Customize your SpecRunner with templates\n\nUse your own SpecRunner templates to customize how `grunt-contrib-jasmine` builds the SpecRunner. See the\n[wiki](https://github.com/gruntjs/grunt-contrib-jasmine/wiki/Jasmine-Templates) for details and third party templates for examples.\n\n##### AMD Support\n\nSupports AMD tests via the [grunt-template-jasmine-requirejs](https://github.com/jsoverson/grunt-template-jasmine-requirejs) module\n\n##### Third party templates\n\n- [RequireJS](https://github.com/jsoverson/grunt-template-jasmine-requirejs)\n- [Code coverage output with Istanbul](https://github.com/maenu/grunt-template-jasmine-istanbul)\n- [StealJS](https://github.com/jaredstehler/grunt-template-jasmine-steal)\n\n[grunt-contrib-connect]: https://github.com/gruntjs/grunt-contrib-connect\n\n\n### Options\n\n#### src\nType: `String|Array`\n\nYour source files. These are the files that you are testing. If you are using RequireJS your source files will be loaded as dependencies into your spec modules and will not need to be placed here.\n\n#### options.specs\nType: `String|Array`\n\nYour Jasmine specs.\n\n#### options.vendor\nType: `String|Array`\n\nThird party libraries like jQuery & generally anything loaded before source, specs, and helpers.\n\n#### options.helpers\nType: `String|Array`\n\nNon-source, non-spec helper files. In the default runner these are loaded after `vendor` files\n\n#### options.styles\nType: `String|Array`\n\nCSS files that get loaded after the jasmine.css\n\n#### options.version\nType: `String`  \nDefault: '2.0.1'\n\nThis is the jasmine-version which will be used. currently available versions are:\n\n* 2.0.1\n* 2.0.0\n\n*Due to changes in Jasmine, pre-2.0 versions have been dropped and tracking will resume at 2.0.0*\n\n#### options.outfile\nType: `String`  \nDefault: `_SpecRunner.html`\n\nThe auto-generated specfile that phantomjs will use to run your tests.\nAutomatically deleted upon normal runs. Use the `:build` flag to generate a SpecRunner manually e.g.\n`grunt jasmine:myTask:build`\n\n#### options.keepRunner\nType: `Boolean`  \nDefault: `false`  \n\nPrevents the auto-generated specfile used to run your tests from being automatically deleted.\n\n#### options.junit.path\nType: `String`  \nDefault: undefined\n\nPath to output JUnit xml\n\n#### options.junit.consolidate\nType: `Boolean`  \nDefault: `false`\n\nConsolidate the JUnit XML so that there is one file per top level suite.\n\n#### options.junit.template\nType: `String`  \nDefault: undefined\n\nSpecify a custom JUnit template instead of using the default `junitTemplate`.\n\n#### options.host\nType: `String`  \nDefault: ''\n\nThe host you want PhantomJS to connect against to run your tests.\n\ne.g. if using an ad hoc server from within grunt\n\n```js\nhost : 'http://127.0.0.1:8000/'\n```\n\nWithout a `host`, your specs will be run from the local filesystem.\n\n#### options.template\nType: `String` `Object`  \nDefault: undefined\n\nCustom template used to generate your Spec Runner. Parsed as underscore templates and provided\nthe expanded list of files needed to build a specrunner.\n\nYou can specify an object with a `process` method that will be called as a template function.\nSee the [Template API Documentation](https://github.com/gruntjs/grunt-contrib-jasmine/wiki/Jasmine-Templates) for more details.\n\n#### options.templateOptions\nType: `Object`  \nDefault: `{}`\n\nOptions that will be passed to your template. Used to pass settings to the template.\n\n#### options.polyfills\nType: `String|Array`\n\nThird party polyfill libraries like json2 that are loaded at the very top before anything else. es5-shim is loaded automatically with this library.\n\n#### options.display\nType: `String`  \nDefault: `full`\n\n  * `full` displays the full specs tree\n  * `short` only displays a success or failure character for each test (useful with large suites)\n  * `none` displays nothing\n\n#### options.summary\nType: `Boolean`  \nDefault: `false`\n\nDisplay a list of all failed tests and their failure messages\n\n### Flags\n\nName: `build`\n\nTurn on this flag in order to build a SpecRunner html file. This is useful when troubleshooting templates,\nrunning in a browser, or as part of a watch chain e.g.\n\n```js\nwatch: {\n  pivotal : {\n    files: ['src/**/*.js', 'specs/**/*.js'],\n    tasks: 'jasmine:pivotal:build'\n  }\n}\n```\n\n### Filtering specs\n\n**filename**\n`grunt jasmine --filter=foo` will run spec files that have `foo` in their file name.\n\n**folder**\n`grunt jasmine --filter=/foo` will run spec files within folders that have `foo*` in their name.\n\n**wildcard**\n`grunt jasmine --filter=/*-bar` will run anything that is located in a folder `*-bar`\n\n**comma separated filters**\n`grunt jasmine --filter=foo,bar` will run spec files that have `foo` or `bar` in their file name.\n\n**flags with space**\n`grunt jasmine --filter=\"foo bar\"` will run spec files that have `foo bar` in their file name.\n`grunt jasmine --filter=\"/foo bar\"` will run spec files within folders that have `foo bar*` in their name.\n\n#### Example application usage\n\n- [Pivotal Labs' sample application](https://github.com/jsoverson/grunt-contrib-jasmine-example)\n\n\n#### Basic Use\n\nSample configuration to run Pivotal Labs' example Jasmine application.\n\n```js\n// Example configuration\ngrunt.initConfig({\n  jasmine: {\n    pivotal: {\n      src: 'src/**/*.js',\n      options: {\n        specs: 'spec/*Spec.js',\n        helpers: 'spec/*Helper.js'\n      }\n    }\n  }\n});\n```\n\n#### Supplying a custom template\n\nSupplying a custom template to the above example\n\n```js\n// Example configuration\ngrunt.initConfig({\n  jasmine: {\n    customTemplate: {\n      src: 'src/**/*.js',\n      options: {\n        specs: 'spec/*Spec.js',\n        helpers: 'spec/*Helper.js',\n        template: 'custom.tmpl'\n      }\n    }\n  }\n});\n```\n\n#### Supplying template modules and vendors\n\nA complex version for the above example\n\n```js\n// Example configuration\ngrunt.initConfig({\n  jasmine: {\n    customTemplate: {\n      src: 'src/**/*.js',\n      options: {\n        specs: 'spec/*Spec.js',\n        helpers: 'spec/*Helper.js',\n        template: require('exports-process.js')\n        vendor: [\n          \"vendor/*.js\",\n          \"http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js\"\n        ]\n      }\n    }\n  }\n});\n```\n\n#### Sample RequireJS/NPM Template usage\n\n```js\n// Example configuration\ngrunt.initConfig({\n  jasmine: {\n    yourTask: {\n      src: 'src/**/*.js',\n      options: {\n        specs: 'spec/*Spec.js',\n        template: require('grunt-template-jasmine-requirejs')\n      }\n    }\n  }\n});\n```\n\nNPM Templates are just node modules, so you can write and treat them as such.\n\nPlease see the [grunt-template-jasmine-requirejs](https://github.com/jsoverson/grunt-template-jasmine-requirejs) documentation\nfor more information on the RequireJS template.\n\n\n## Release History\n\n * 2014-10-20   v0.8.1   Nowremoves listeners when using the build flag. Adds handler for fail.load.\n * 2014-07-26   v0.8.0   Plugin now uses Jasmine 2.0.4 from npm. Updates other dependencies. Added \"options.polyfills\".\n * 2014-07-26   v0.7.0   Merged 153 to add stack trace to summary. Updated for Jasmine 2.0.1 Merged 133 for minimal output Merged 139 changing file exclusion logic\n * 2014-05-31   v0.6.5   Option to allow specifying a junitTemplate.\n * 2014-04-28   v0.6.4   Indent level fix. Moved scripts inside the body tag.\n * 2014-01-29   v0.6.0   Jasmine 2.0.0 support Improved logging support Various merges/bugfixes\n * 2013-08-02   v0.5.2   Fixed breakage with iframes /44 Added filter flag / 70 Fixed junit failure output /77\n * 2013-06-18   v0.5.1   Merged /69 grunt async not called when tests fail OR keepRunner is true\n * 2013-06-15   v0.5.0   updated rimraf made teardown async, added Function.prototype.bind polyfill breaking (templates) changed input options for getRelativeFileList breaking (usage) failing task on phantom error (SyntaxError, TypeError, et al)\n * 2013-04-03   v0.4.2   bumped grunt-lib-phantomjs to 0.3.0/1.9 (closes merged addressed\n * 2013-03-08   v0.4.0   bumped grunt-lib-phantomjs to 0.2.0/1.8 allowed spec/vendor/helper list to return non-matching files (e.g. for remote, http) merged merged\n * 2013-02-24   v0.3.3   Added better console output (via Gabor Kiss @Neverl)\n * 2013-02-17   v0.3.2   Ensure Gruntfile.js is included on npm.\n * 2013-02-15   v0.3.1   First official release for Grunt 0.4.0.\n * 2013-01-22   v0.3.1rc7   Exposed phantom and sendMessage to templates\n * 2013-01-22   v0.3.0rc7   Updated dependencies for grunt v0.4.0rc6/rc7\n * 2013-01-08   v0.3.0rc5   Updating to work with grunt v0.4.0rc5. Switching to this.filesSrc api. Added JUnit xml output (via Kelvin Luck @vitch) Passing console.log from browser to verbose grunt logging Support for templates as separate node modules Removed internal requirejs template (see grunt-template-jasmine-requirejs)\n * 2012-12-03   v0.2.0   Generalized requirejs template config Added loader plugin Tests for templates Updated jasmine to 1.3.0\n * 2012-11-24   v0.1.2   Updated for new grunt/grunt-contrib apis\n * 2012-11-07   v0.1.1   Fixed race condition in requirejs template\n * 2012-11-07   v0.1.0   Ported grunt-jasmine-runner and grunt-jasmine-task to grunt-contrib\n\n---\n\nTask submitted by [Jarrod Overson](http://jarrodoverson.com)\n\n*This file was generated on Mon Oct 20 2014 11:50:15.*\n",
  "readmeFilename": "README.md",
  "_id": "grunt-contrib-jasmine@0.8.1",
  "_shasum": "e994a0a61b0751b2e6e224dfcfab4a36be4003f4",
  "_from": "grunt-contrib-jasmine@",
  "_resolved": "https://registry.npmjs.org/grunt-contrib-jasmine/-/grunt-contrib-jasmine-0.8.1.tgz"
}
